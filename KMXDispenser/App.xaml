<Application x:Class="KMXDispenser.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KMXDispenser"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml">
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml">
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Indigo.xaml">
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml">
                </ResourceDictionary>
                <!--MainSkin.xaml-->

            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                                <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="Gray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MaterialDesignCircularProgressBar" TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="10" />
                <Setter Property="Height" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="IsIndeterminateStoryboard" TargetName="RotateTransform" TargetProperty="Angle" RepeatBehavior="Forever">
                                    <DoubleAnimation From="0" To="359" Duration="0:0:2" />
                                </Storyboard>
                                <Storyboard x:Key="IsFullyIndeterminateScaleStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FullyIndeterminateGridScaleTransform"
                                                           Storyboard.TargetProperty="ScaleX"
                                                           RepeatBehavior="Forever">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                             Storyboard.TargetProperty="Angle" 
                                             RepeatBehavior="Forever"
                                             From="00" To="359" Duration="0:0:1.25" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="TemplateRoot" ClipToBounds="False">
                                <Grid x:Name="FullyIndeterminateGrid">
                                    <Grid.RenderTransform>
                                        <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform" ScaleX="0" />
                                    </Grid.RenderTransform>
                                </Grid>
                                <Grid x:Name="PathGrid" Margin="2" />
                                <Canvas>
                                    <Ellipse Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                                    <Path x:Name="Path" Stroke="{TemplateBinding Foreground}" StrokeThickness="14" 
                                  Canvas.Top="2" Canvas.Left="2"
                                  RenderTransformOrigin="0, 0">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
                                                    <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}"
                                                        SweepDirection="Clockwise">
                                                        <ArcSegment.IsLargeArc>
                                                            <MultiBinding Converter="{StaticResource LargeArcConverter}">
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum" />
                                                                <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                            </MultiBinding>
                                                        </ArcSegment.IsLargeArc>
                                                        <ArcSegment.Point>
                                                            <MultiBinding Converter="{StaticResource ArcEndPointConverter}">
                                                                <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum" />
                                                                <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                            </MultiBinding>
                                                        </ArcSegment.Point>
                                                    </ArcSegment>
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform x:Name="RotateTransform"
                                                         CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" 
                                                         CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}" Value="True" />
                                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                        <Condition Binding="{Binding Value, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                                        <BeginStoryboard Storyboard="{StaticResource IsIndeterminateStoryboard}"
                                                 Name="IsIndeterminateStoryboard"/>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsIndeterminate" Value="True" />
                                        <Condition Property="Value" Value="0" />
                                        <Condition Property="IsVisible" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                                        <BeginStoryboard Storyboard="{StaticResource IsFullyIndeterminateScaleStoryboard}"
                                                 Name="IsFullyIndeterminateStoryboard"/>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
        
    </Application.Resources>
</Application>
